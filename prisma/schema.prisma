// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  uuid            String    @unique @default(uuid())
  email           String?   @unique
  password        String
  emailVerified   DateTime? @map("email_verified")
  name            String?
  lastName        String?   @map("last_name")
  bio             String?
  image           String?
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  delete_at       DateTime?

  // Relations
  accounts        Account[]
  sessions        Session[]
  roles           Role[]      @relation("users_roles")
 
  @@map("users")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Role {
  id          String        @id @default(cuid())
  uuid        String        @unique @default(uuid())
  name        String        @unique
  description String?
  createdAt  DateTime       @default(now()) @map("created_at")
  updatedAt  DateTime       @updatedAt @map("updated_at")

  users       User[]        @relation("users_roles")
  permissions Permission[]  @relation("roles_permissions")

  @@map("roles")
}

model Permission {
  id          String   @id @default(cuid())
  uuid        String   @unique @default(uuid())
  name        String   @unique
  description String?
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  roles      Role[]   @relation("roles_permissions")
  @@map("permissions")
}